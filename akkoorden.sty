%% the Akkoord package
%%   Drawing guitar chords using TikZ
%%
%% Copyright 2017 Ronald Ligteringen <r.ligteringen@gmail.com>
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Ronald Ligteringen.
%
% This work consists of the file akkoord.sty
%
%% Inspired by:
%% - guitarchordschemes-package by Clemens Niederberger
%% - gchords-package by Kasper Peeters

\NeedsTeXFormat{LaTeX2e}[1994/06/01]

\ProvidesPackage{akkoorden}[2017/07/23 Drawing guitar chords using TikZ]

\RequirePackage{tikz}
\RequirePackage{pgfopts}
\RequirePackage[EULERGREEK]{sansmath}
\RequirePackage{etoolbox}
\RequirePackage{xstring} % for StrCut

\usetikzlibrary{decorations}

\csgdef{@mute}{x}
\csgdef{@open}{o}
\csgdef{@skip}{-}
\gdef\true{true}
\gdef\false{false}
\gdef\posbase{I}
\gdef\fingerloctop{t}
\gdef\inside{inside}
\gdef\top{top}
\gdef\left{left}
\gdef\right{right}
\gdef\defaultposition{\empty}
\xdef\defaultshowposbase{\true}
\gdef\defaultnosnares{6}
\gdef\defaultnofrets{4}
\xdef\defaultfingerloc{\inside}
\gdef\defaultfingercolor{white}
\xdef\defaultpositionloc{\left}
\gdef\defaultscale{0.35}

\pgfkeys{
  /akkoorden/.is family, /akkoorden,
  defaultposition/.estore in = \defaultposition,
  defaultshowposbase/.estore in = \defaultshowposbase,
  defaultnosnares/.estore in = \defaultnosnares,
  defaultnofrets/.estore in = \defaultnofrets,
  defaultfingerloc/.estore in = \defaultfingerloc,
  defaultfingercoler/.estore in = \defaultfingercolor,
  defaultpositionloc/.estore in = \defaultpositionloc,
  defaultscale/.estore in = \defaultscale,
}

\ProcessPgfOptions{/akkoorden}

\pgfkeys{
  /akkoord/.is family, /akkoord,
  default/.style =
    {
      position=\defaultposition,
      positionloc=\defaultpositionloc,
      fingerloc=\defaultfingerloc,
      fingercolor=\defaultfingercolor,
      nostrings=\defaultnosnares,
      nofrets=\defaultnofrets,
      showposbase=\defaultshowposbase,
      scale=\defaultscale,
    },
  position/.estore in = \position,
  positionloc/.estore in = \positionloc,
  fingerloc/.estore in = \fingerloc,
  fingercolor/.estore in = \fingercolor,
  nostrings/.estore in = \nostrings,
  nofrets/.estore in = \nofrets,
  showposbase/.estore in = \showposbase,
  scale/.estore in = \scale,
  p/.style = {/akkoord/position=#1},
  f/.style = {/akkoord/fingerloc=#1},
  c/.style = {/akkoord/fingercolor=#1},
  s/.style = {/akkoord/nostrings=#1},
  n/.style = {/akkoord/nofrets=#1},
}

\xdef\fingerList{\empty}
\newcommand{\addFingerList}[1]{\ifx\fingerList\empty{\xdef\fingerList{#1}}\else{\xdef\fingerList{\fingerList,#1}}\fi}

%%
% Many thanks to A. Ellett:
% Fix baseline when drawing tikz inside tabu
% source: https://tex.stackexchange.com/questions/246698/table-with-tikz-image-vertical-alignment
% This should probably not be inside this package file...
\tikzset{my pic adjust/.style={%%
  baseline=(my center),
  execute at end picture={\path (current bounding box.north) -- ++ (0,4pt);
                          \path (current bounding box.south) -- ++ (0,-4pt);
                          \path (current bounding box.center) -- ++ (0,#1) coordinate (my center);
                          }%
  },
my pic adjust/.default=0pt,
}
%%

\newrobustcmd{\akkoord}[3][] {
  \pgfkeys{/akkoord, default, #1}%
%
  \begin{tikzpicture}[font=\sffamily\sansmath, scale=\scale, every node/.style={transform shape}, baseline=(current bounding box.north), my pic adjust=-2pt, yscale=-1] % Note: yscale -1 and node transform shape turns around the texts. this is solved by adding yscale -1 to node (see below)

  % Draw snares and frets (6 by 4)
  \draw[help lines] (0,0) grid (\nostrings-1,\nofrets);

  % Write position on the left
  \ifx \position \empty {} \else {
    % Draw guitar nut if visible (position == 1)
    \ifx \position \posbase {
      \draw[thick] (0,-0.1) -- (\nostrings-1,-0.1);
      \ifx \showposbase \true {
        \ifx \positionloc \right {
          \draw (\nostrings, 0.5) node {\Huge \position};
        } \else {
          \draw (-1, 0.5) node {\Huge \position};
        } \fi
      } \fi
    } \else {
      \ifx \positionloc \right {
        \draw (\nostrings, 0.5) node {\Huge \position};
      } \else {
        \draw (-1, 0.5) node {\Huge \position};
      } \fi
    } \fi
  } \fi

  \csdef{@chordname}{#3}
  % Write chord-name above chord
  \ifcsequal{@chordname}{@skip} {} {
    \node[yscale=-1] at (2.5,-1.5) {\Huge #3};
  }

  % Draw fingers on fret,
  % mute or open on top
  % and info on bottom
  \foreach \x [count=\i] in {#2} {
    %%
    % variable amount of arguments separated by '/'
    % consecutively stored in '@fret', '@finger' and '@info'
    \csedef{@varargs}{\x}
    \StrCut{\csuse{@varargs}}{/}\left\right
    \ifx \left \empty
      \csundef{@fret}
    \else
      \global\csedef{@fret}{\left}
    \fi
    \csedef{@subvarargs}{\right}
    \StrCut{\csuse{@subvarargs}}{/}\sleft\sright
    \ifx \sleft \empty
      \csundef{@finger}
    \else
      \global\csedef{@finger}{\sleft}
    \fi
    \ifx \sright \empty
      \csundef{@info}
    \else
      \global\csedef{@info}{\sright}
    \fi
    \csundef{@subvarargs}
    \csundef{@varargs}
    % end variable amount of arguments
    %%
    % Fret is defined
    \ifcsdef{@fret}
      {
      % Fret is mute
      \ifcsequal{@fret}{@mute}
        {
        \node[yscale=-1] at (\i-1, -0.5) {\Large X};
        % if fret is mute, second argument is info (not finger)
        \ifcsdef{@finger}
          {
          \csedef{@info}{\csuse{@finger}}
          \csundef{@finger}
          } {}
        }
        {
        % Fret is open
        \ifcsequal{@fret}{@open}
          {
          \node[yscale=-1] at (\i-1, -0.5) {\Large O};
          % if fret is open, second argument is info (not finger)
          \ifcsdef{@finger}
            {
            \csedef{@info}{\csuse{@finger}}
            \csundef{@finger}
            } {}
          }
          {
          % Fret is skipped
          \ifcsequal{@fret}{@skip}
            {
            % if fret is skipped, second argument is info (not finger)
            \ifcsdef{@finger}
              {
              \csedef{@info}{\csuse{@finger}}
              \csundef{@finger}
              }
            }
            {
            % Otherwise fret is fret-number
            \filldraw [fill=\fingercolor] (\i-1, \csuse{@fret}-0.5) circle [radius=0.4];
            % write finger in fret
            \ifcsdef{@finger}
              {
              \ifcsequal{@finger}{@skip}{}
                {
                \ifx \fingerloc \top
                {\node[yscale=-1] at (\i-1, -0.5) {\Large \csuse{@finger}};}
                \else
                {\node[yscale=-1] at (\i-1, \csuse{@fret}-0.5) {\Large \csuse{@finger}};}
                \fi
                % Remember used finger for drawing bar
                \addFingerList{\csuse{@finger}}
                % Find out if we can draw a bar...
                \ifcsdef{@barLowSnare@\csuse{@finger}}
                  {
                    \csnumgdef{@barHighSnare@\csuse{@finger}}{\i}
                    \csnumgdef{@barHighFret@\csuse{@finger}}{\csuse{@fret}}
                  }
                  {
                    \csnumgdef{@barLowSnare@\csuse{@finger}}{\i}
                    \csnumgdef{@barLowFret@\csuse{@finger}}{\csuse{@fret}}
                  }
                }
              }{}
            }
          }
        }
        % Write info
        \ifcsdef{@info}
          {
          \node[yscale=-1] at (\i-1, \nofrets+.5) {\Large \csuse{@info}};
          } {}
      } {}
    % Cleanup
    \csundef{@fret}
    \csundef{@finger}
    \csundef{@info}
  }
  % Drawing bars if needed
  \foreach \x in \fingerList {
    \ifcsdef{@barHighSnare@\x}{
      \fill (\csuse{@barLowSnare@\x}-1,\csuse{@barLowFret@\x}-0.915) to[out=-20, in=-160] (\csuse{@barHighSnare@\x}-1,\csuse{@barHighFret@\x}-0.915) to[out=-154, in=-26] (\csuse{@barLowSnare@\x}-1,\csuse{@barLowFret@\x}-0.915); % Note: because yscale -1 the angles must be turned 180 (-20 and -160). Note: only fill makes for nicer bow
    }{}
    % Cleanup
    \global\csundef{@barLowSnare@\x}
    \global\csundef{@barLowFret@\x}
    \global\csundef{@barHighSnare@\x}
    \global\csundef{@barHighFret@\x}
  }
  \end{tikzpicture}
  % Reset list of used fingers
  \xdef\fingerList{\empty}
}

\endinput
